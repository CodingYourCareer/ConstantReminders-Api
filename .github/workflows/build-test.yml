name: Build Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    strategy:
      matrix:
        configuration: [Release]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration ${{ matrix.configuration }} --no-restore

      - name: Test with coverage
        run: |
          dotnet test --no-restore --verbosity normal /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput=./coverage.opencover.xml

      - name: Unit Tests + SonarScanner
        uses: highbyte/sonarscan-dotnet@v2.4.1
        with:
          sonarProjectKey: CodingYourCareer_ConstantReminders-Api
          sonarProjectName:  ConstantReminders-Api
          sonarOrganization: codingyourcareer
          dotnetTestArguments: --logger trx --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
          sonarBeginArguments: |
            /d:sonar.cs.opencover.reportsPaths="**/TestResults/**/coverage.opencover.xml"
            /d:sonar.cs.vstest.reportsPaths="**/TestResults/*.trx"
            /d:sonar.exclusions="**/Program.cs"
            /d:sonar.scanner.scanAll=false

      - name: Run Snyk test to check for vulnerabilities
        uses: snyk/actions/dotnet@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high --file=./ConstantReminders-Api.sln

      - name: Run Snyk monitor to report vulnerabilities to snyk.io
        uses: snyk/actions/dotnet@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: monitor
          args: --severity-threshold=high --file=./ConstantReminders-Api.sln
